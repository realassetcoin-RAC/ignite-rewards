#!/bin/bash

# Comprehensive Database Fix Application Script
# This script applies the database fix for plan saving and virtual card creation issues

echo "üîß Comprehensive Database Fix Application Script"
echo "=================================================="
echo ""
echo "This script will fix:"
echo "‚úÖ Plan saving 'schema must be one of the following:api' error"
echo "‚úÖ Virtual card creation failures"
echo "‚úÖ Missing RLS policies and permissions"
echo "‚úÖ Table structure inconsistencies"
echo ""

# Check if Supabase CLI is installed
if command -v supabase &> /dev/null; then
    echo "üìã Supabase CLI detected. You can use either method below:"
    echo ""
    echo "METHOD 1 - Using Supabase CLI:"
    echo "1. Copy the SQL from comprehensive_database_fix.sql"
    echo "2. Run: supabase db push"
    echo "3. Or create a new migration: supabase migration new comprehensive_fix"
    echo ""
fi

echo "METHOD 2 - Using Supabase Dashboard (Recommended):"
echo "1. Go to your Supabase project dashboard"
echo "2. Navigate to SQL Editor"
echo "3. Copy and paste the contents of comprehensive_database_fix.sql"
echo "4. Click 'Run' to execute the fix"
echo ""

# Check if we're in a Supabase project
if [ -f "supabase/config.toml" ]; then
    echo "üìÅ Supabase project detected!"
    echo ""
    
    read -p "Do you want to create a new migration file? (y/n): " create_migration
    
    if [[ $create_migration =~ ^[Yy]$ ]]; then
        # Create a new migration with the fix
        migration_name="comprehensive_database_fix_$(date +%Y%m%d_%H%M%S)"
        migration_file="supabase/migrations/${migration_name}.sql"
        
        cp comprehensive_database_fix.sql "$migration_file"
        
        echo "‚úÖ Migration created: $migration_file"
        echo ""
        echo "To apply the migration:"
        echo "  supabase db push"
        echo ""
    fi
fi

echo "üîç VERIFICATION STEPS:"
echo "After applying the fix, verify it worked by:"
echo ""
echo "1. Check in Supabase SQL Editor:"
echo "   SELECT COUNT(*) FROM public.merchant_subscription_plans;"
echo "   SELECT COUNT(*) FROM public.virtual_cards;"
echo "   SELECT COUNT(*) FROM public.profiles;"
echo ""
echo "2. Test in your application:"
echo "   ‚Ä¢ Try creating a new subscription plan"
echo "   ‚Ä¢ Try creating a new virtual card"
echo "   ‚Ä¢ Check that admin dashboard loads without errors"
echo ""
echo "3. Check browser console for any remaining errors"
echo ""

echo "üìû TROUBLESHOOTING:"
echo "If you still encounter issues:"
echo "‚Ä¢ Check that your user has admin role in the profiles table"
echo "‚Ä¢ Clear browser cache and refresh the application"
echo "‚Ä¢ Check browser console for specific error messages"
echo "‚Ä¢ Verify that all migrations have been applied successfully"
echo ""

echo "üéâ Ready to apply the fix!"
echo "Choose your preferred method above and follow the instructions."